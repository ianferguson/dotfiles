#!/bin/bash
#setup homebrew, dotfiles on a new machine
#not currently tested beyond the stow portion of things,
#need to set up an empty vagrant image for testing first
set -e
set -o pipefail

pushd $(dirname $0) > /dev/null


#### OS X or Linux? ####
UNAME=$(uname -s)
OS="unknown"
echo "proceeding with hassling stowaways for $UNAME"

if [ "Linux" = "$UNAME" ]; then
  # Assumes linux is always an apt based system
  #### install git and stow for linux ####
  sudo apt-get install stow git -y;
  OS="linux"
elif [ "Darwin" = "$UNAME" ]; then
  #### install dev tools, Homebrew and git ####
  xcode-select --install
  read -p "press return when xcode cli tools install is complete to continue"
  curl -fsSL "https://raw.githubusercontent.com/Homebrew/install/master/install" > "/tmp/install_brew.rb"
  ruby "/tmp/install_brew.rb"
  rm "/tmp/install_brew.rb"
  OS="osx"
else
  "Don't know what to do with stowaways with a uname of $UNAME"
  exit 1;
fi


#### generate new ssh keys ####
if [ ! -f "$HOME/.ssh/id_rsa" ]; then
  ssh-keygen -b 4096
fi


#### get dotfiles repo ####
GITDIR="$HOME/git"
mkdir -p "$GITDIR"
pushd "$GITDIR" > /dev/null
DOTREPO="dotfiles"
if [ ! -d "$HOME/git/dotfiles" ]; then
  read -p "about to clone dotfiles repo, go ahead and add your new ssh key to github first, press enter when done"
  git clone "git@github.com:ianferguson/$DOTREPO.git"
fi
pushd "$DOTREPO" > /dev/null
git submodule init
git submodule update

#### install brew bundles ####
if [ "osx" = "$OS" ]; then
  pushd brew > /dev/null
  ./starter
  brew doctor || true
  popd > /dev/null
else
  pushd apt > /dev/null
  ./starter
  popd >/dev/null
fi;

#### pick up default fish universal env settings
fish universal_fish_vars

#### Deploy Stow Stuff ####
# use the relative path within the repo, since we won't have placed the script in
# the ~/bin and on path yet (i.e. it will place itself there while running
./stow/bin/deploy_stow

#### run rbenv bootstrap install
./ruby/bin/initruby

popd > /dev/null
popd > /dev/null
popd > /dev/null
